#!/usr/bin/env ruby

# Project Euler #2
# Linus Graybill 11/5/2009

# http://projecteuler.net/index.php?section=problems&id=2
# 
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
# By starting with 1 and 2, the first 10 terms will be:
# 
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# 
# Find the sum of all the even-valued terms in the sequence which do not exceed four million.

def euler_2()
  tmp_num = 1
  prev_num = 1
  next_num = 2
  sum_of_nums = 0
  even_fib_seq = Array.new
  while tmp_num < 4000000
    tmp_num = prev_num + next_num
    if tmp_num <4000000
      if (tmp_num%2 == 0)
        even_fib_seq << tmp_num
      end      
    end
    prev_num = next_num
    next_num = tmp_num 
  end
  even_fib_seq.each do |num|
    sum_of_nums += num
  end
  p sum_of_nums.to_s

end

euler_2()